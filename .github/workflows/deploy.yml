name: CI/CD with Sonarqube & Docker 

on:
  push:
    branches:
      - main
      - dev/gitActions

jobs:
  tests:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: Build & Test Backend with Maven
        working-directory: back
        run: mvn clean test

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: front/package-lock.json
      
      - name: Install Frontend dependencies
        working-directory: front
        run: npm install

      - name: Run Frontend Tests
        working-directory: front
        run: npm run test -- --code-coverage --no-watch --no-progress --browsers=ChromeHeadless

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: front/coverage/


  sonarqube_scan:
    name: sonarqube scan
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Cacher les packages SonarCloud pour une ex√©cution plus rapide
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: sonar-${{ runner.os }}-${{ hashFiles('**/pom.xml', '**/package-lock.json') }}
          restore-keys: |
            sonar-${{ runner.os }}-

      - name: Download frontend coverage
        uses: actions/download-artifact@v4
        with:
          name: frontend-coverage
          path: front/coverage
          
      - name: SonarQube scan Frontend
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONTEND }}

      - name: SonarQube scan Backend
        working-directory: back
        env: 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACKEN }}
        run: mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=bobapps_backend -Dsonar.projectName=backend
          

  build_and_push_frontend:
    name: Build & Push Frontend Docker Image
    runs-on: ubuntu-latest
    needs: sonarqube_scan

    steps:
      - name: checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{secrets.DOCKER_PASSWORD}}" | docker login -u "${{secrets.DOCKER_USERNAME}}" --password-stdin

      - name: Build Frontend Docker Image
        working-directory: front
        run: docker build -t ${{secrets.DOCKER_USERNAME}}/bobapp-front . 

      - name: Push Frontend Docker Image
        run: docker push ${{secrets.DOCKER_USERNAME}}/bobapp-front

  build_and_push_backend:
    name: Build & Push Backend Docker Image
    runs-on: ubuntu-latest
    needs: sonarqube_scan

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login in to Docker Hub
        run: echo "${{secrets.DOCKER_PASSWORD}}" | docker login -u "${{secrets.DOCKER_USERNAME}}" --password-stdin

      - name: Build Backend Docker Image
        working-directory: back
        run: docker build -t ${{secrets.DOCKER_USERNAME}}/bobapp-back .

      - name: Push Backend Docker Image
        run: docker push ${{secrets.DOCKER_USERNAME}}/bobapp-back